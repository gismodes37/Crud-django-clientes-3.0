# Generated by Django 5.1.6 on 2025-03-17 21:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'agenda_categorias',
            },
        ),
        migrations.CreateModel(
            name='PrecioProveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio_costo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descuento', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('fecha_actualizacion', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Producto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(default='CODIGO_TEMPORAL', max_length=50, unique=True)),
                ('numero_registro', models.CharField(default='TEMPORAL', max_length=50, unique=True)),
                ('nombre', models.CharField(max_length=200)),
                ('stock', models.PositiveIntegerField()),
                ('precio_neto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('margen_venta', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('flete', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='agenda_user_groups', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='agenda_user_permissions', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('numero_registro', models.CharField(blank=True, help_text='Formato: 0000-000', max_length=8, null=True, unique=True, verbose_name='Número de Registro')),
                ('nombres', models.CharField(blank=True, max_length=100, null=True)),
                ('apellidos', models.CharField(blank=True, max_length=100, null=True)),
                ('telefono', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('razon_social', models.CharField(blank=True, max_length=100, null=True)),
                ('rut', models.CharField(blank=True, help_text='Formato: 00.000.000-0', max_length=12, null=True, verbose_name='Número de Rut')),
                ('direccion', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_registro', models.DateTimeField(default=django.utils.timezone.now)),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contactos_creados', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='contactos_modificados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-fecha_registro'],
                'unique_together': {('nombres', 'apellidos')},
            },
        ),
        migrations.CreateModel(
            name='ContactPDF',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pdf', models.FileField(upload_to='pdfs/')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pdfs', to='agenda.contact')),
            ],
        ),
        migrations.CreateModel(
            name='HistorialPrecio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('precio_costo', models.DecimalField(decimal_places=2, max_digits=10)),
                ('descuento', models.DecimalField(decimal_places=2, max_digits=5)),
                ('fecha_cambio', models.DateTimeField(auto_now_add=True)),
                ('precio_proveedor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agenda.precioproveedor')),
            ],
        ),
        migrations.AddField(
            model_name='precioproveedor',
            name='producto',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agenda.producto'),
        ),
        migrations.CreateModel(
            name='Proveedor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True, verbose_name='Código de Proveedor')),
                ('nombre', models.CharField(max_length=100)),
                ('contacto', models.CharField(blank=True, max_length=100, null=True)),
                ('raz_social', models.CharField(blank=True, max_length=100, null=True)),
                ('rut_p', models.CharField(blank=True, help_text='Formato: 00.000.000-0', max_length=12, null=True, verbose_name='Número de Rut')),
                ('telefono', models.CharField(blank=True, max_length=15, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('creado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proveedores_creados', to=settings.AUTH_USER_MODEL)),
                ('modificado_por', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='proveedores_modificados', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='precioproveedor',
            name='proveedor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='agenda.proveedor'),
        ),
        migrations.CreateModel(
            name='Subcategoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=20, unique=True)),
                ('nombre', models.CharField(max_length=100)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subcategorias', to='agenda.categoria')),
            ],
            options={
                'db_table': 'agenda_subcategorias',
            },
        ),
        migrations.AddField(
            model_name='producto',
            name='subcategoria',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='productos', to='agenda.subcategoria'),
        ),
        migrations.AlterUniqueTogether(
            name='precioproveedor',
            unique_together={('producto', 'proveedor')},
        ),
    ]
